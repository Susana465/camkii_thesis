---
bibliography: [methods.bib]
---
# Model description
Abstract

This chapter delves into the methods used to model molecular interactions of interest. Using Monte Carlo algorithm simulations with MCell and CellBlender, I modeled the interactions of initial molecules released inside the cell, including Ca2+, CaM, CaMKII, PP1, and NMDARs on the cell surface. The binding dynamics of calcium to calmodulin and subsequent interactions with CaMKII ware examined, alongside the states of CaMKII (open/closed, active/inactive) and the phosphorylation processes of CaMKII. 

The results should highlight the importance of CaM binding to CaMKII, and NMDARs, and its regulation through phosphorylation, as well as the role of these interactions in maintaining the phosphorylated state of CaMKII within the postsynaptic density.

The models are run using a stochastic agent-based approach, where only the reactions between existing discrete molecules that occur during the simulation need to be tracked by the program (network free simulation [119, 120]). the important quantity is the number of different states present which can be much smaller than the number of possible states. As a general rule, stochastic simulations are preferred where the numbers of particles of a chemical species is small; the ODE approach is required when the number of particles is large because the stochastic approach might be computationally intractable. When the assumption of continuous concentration fails due to small-scale cellular environment with limited reactant populations, ODE representation also fails. It is here when stochastic simulations are useful. 

## What I want out of this chapter?
Explain CaMKII and NMDARs interactions in detail. Explain how they are structurally interacting, what bonds are binding, and what specific molecules are being attracted or repulsed in each molecule.

DO NOT GET SIDE TRACKED WITH OTHER CHAPTERS. IF IDEAS COME CAN WRITE BUT FOCUS IS ON METHODS (do I want to rewrite this during the writing week? this probably takes quite a big chunk of time, decide on week have this as a maybe), BIOLOGY OF CAMKII AND NMDARS, AND RESULTS. 
I want to specify what happens to CaMKII when its docked, open etc in all the different steps and what this means in terms of conditions of binding etc. What are the assumptions and what are the real conditions for camkii to P or be active, for exmaple?

During the writing retreat, I want to:
- read and specify in writing what happens when camkii docked vs undocked
- tidy up all the info I have already below on CaMKII and NMDARs into a cohesive story
- Tidy up the section where I write what others have done and why mine is different
- Look at the feedback David game a few weeks ago on thesis layout (need to find)
- Add result figures (add at least 4) of molecule reactions

Further objectives I'd like to add here are:
- finish model and see what different conditions I can test, mutants vs wt for example
- look at space dynamics in mcell, need to discuss with supervisors

## Molecular species: How are molecular interactions modelled?

I have constructed the models at different scales to validate CaMKII interactions with other molecules like calmodulin and NMDARs, at increasing levels of complexity. First I re-created a model of CaMKII as a monomer that was previously completed in 2017. That model used cBNGL and represented CaMKII as monomers to serve as a proof of concept as well as a starting validation point, as dynamics of this model were previously shown to be within biologically accurate limits. 

The current model is ran with CaMKII as a dodecameric molecule. The model contains four protein species: CaM, PP1, CaMKII and NMDARS (see table of molecules included in the model). Initial molecules released inside the cell are: Ca2+ ions, CaM, CaMKII and PP1, inside the cytosol, and NMDARs as cell surface molecules. Since four calcium ions are needed to fully saturate CaM (CaM_Ca4) [REFERENCES], five times more calcium than CaM and CaMKII was released to ensure it would not be a limiting factor [TABLE REFERENCE]. Interactions between different molecules are modelled as rules in BNGL (as explained in CHAPTER REFERENCE), where each molecule reacts according to certain conditions and kinetic rates.  

There are different ways in which molecular states can happen and interact. For example, CaMKII subunits can flicker, without external prompt of any other molecule, between an open and closed state (reaction #5 @fig-table-rxns1). Likewise, if two neighbouring subunits are open, one can autophosphorylate the other (reaction #7 @fig-table-rxns1). If calmodulin then binds to a subunit that is phosphorylated, it is more likely to keep the subunit in an active, phosphorylated state. In contrast, phosphorylation of the T306 site prevents calmodulin from binding to the CaMKII subunit (reaction #8 @fig-table-rxns1), making the subunit less likely to remain in its active state compared to when it is stabilized by CaM binding or T286 phosphorylation. Dephosphorylation by PP1 at T286 can occur when the site is accessible, meaning the subunit is phosphorylated at T286, unbound to CaM, and in an open state. In order to fully understand the different conditions and reactions in the model, let's look into them more in detail next.

Molecules in the model can have various binding sites, or none. For example, Ca2+ and PP1 are modelled as reactants that can interact with other molecules, but they themselves don't have binding sites. On the other hand, CaM, CaMKII and NMDAR all have different binding sites (ADD FIGURE). Importantly, CaMKII is modelled as a dodecamer, with two rings of six subunits stacked on top of each other (ADD FIGURE)

## Model validation

The processes used in software development can also apply to biological model development. Following @husar2022MCell4, four key points were considered for this project:

1.	Incremental model development: build the model step by step on validated foundations.

2.	Modularity: create self-contained, reusable libraries

3.	Unit testing and validation: ensure parts of the model behave as expected.

4.	Human-readable code: store using version control such as git for easy review by team members. 

Finally, I aim to validate this work against a model from @ordyan2020Interactions, where they successfully modelled CaMKII as a twelve subunit holoenzyme using BioNetGen simulations. 
What have pharris, ordyan and other people done and how does my model relate and differ.

## Model parameters

![Table to be added as markdown but not yet as first need to render document but leaving it as screenshots for reference for now.](30-methods-figures\table_rxns1.PNG){#fig-table-rxns1}

![2nd part](30-methods-figures\table_rxns2.PNG){#fig-table-rxns2}

## Model creation and visualization in CellBlender

I began the model of CaMKII monomers as described in the 2017 model I created using MCell and CellBlender. At the time, MCell did not allow for molecules be modelled as multi-complexes. Thus, for example, one phosphorylated CaMKII molecule in the model was just a single subunit phosphorylated –not twelve phosphorylated subunits. This model includes Ca2+ binding rates to CaM, CaM binding rates to monomeric CaMKII, and phosphorylation rates of active CaMKII monomers by one another, all depending on how many Ca2+ ions are bound to the CaM molecules involved. CaMKII dephosphorylation by PP1 is modelled, as well as binding interactions of CaMKII with NMDARs. In order to replicate and validate the results obtained from the CaMKII monomer in 2017, I re-wrote all reactions into a cBNGL model using the same parameters used originally. We define a volume previously modelled of 0.5μm3, which is within ranges of spine volume of 0.004 to 0.6 μm3 in hippocampal CA1 neurons (Harris and Stevens, 1989). Using cBNGL, I can specify the above mentioned 3D volume, with a 2D surface compartment acting as the cell membrane, where NMDARs can diffuse. Inside the cell volume, all of the interacting molecules are released as per table 1.

## What have other people done?
_Previous multi-state models of CaMKII exist but are different in focus and in scope from the 462 present model. For example, our model is based on an earlier multi-state model by Stefan et al. (2012) 463 [29] implemented in the particle-based stochastic simulator StochSim [70].StochSim does not explicitly account for spatial information. MCell, as a spatial simulator, 466 offers more possibilities to precisely account for spatial effects and to situate models in spatially realistic 467 representations of cellular compartments. In addition, the model by Stefan et al. provides only for 468 interactions between adjacent CaMKII molecules on the same hexamer ring and therefore models 469 CaMKII as a hexamer, not a dodecamer._

Michalski and 470 Loew (2012) bionetgen and vcell.

rule-based model of the CaMKII holoenzyme by 478 Li and Holmes [26] offers a detailed representation of how CaM binds to Ca2+ and subsequently activates 479 CaMKII subunits, based on earlier results of CaM regulation [75]. Li and Holmes offer valuable and 480 detailed insight into how CaM binding to CaMKII depends on Ca2+ dynamics.

Parris model looks at CaMKII dynamics with CaM particularly, uses mcell - they didnt look at binding with nmdars. This study was done using MCell 3.3 which did not allow for diffusion of multistate molecules. 

Ordyan looks at CaMKII and NMDARs with mcell and bionetgen but does not look at space dynamics - I think? 
Ordyan et al., use rule-based modelling methodology using Monte Carlo methods similar to this work, to investigate how Ca2+ signals influence the dynamics of CaMKII phosphorylation within the PSD.

_Ordyan et al. (199) developed a multiscale, rule-based model of CaMKII activation that accounted for kinetics of CaMKII modelled as a monomer and a holoenzyme. Their findings suggested that CaMKII functions as a leaky integrator of Ca2+ pulses in the presence of neurogranin (Ng) and PP1, consistent with previous experimental observations in short LTP (46). Their results suggest CaMKII integrates Ca2+ signals in a frequency-dependent manner, which contrasts with the earlier models that propose CaMKII functions as a bistable memory switch (212)._

Likewise, another model supports the idea that CaMKII acts as a leaky integrator of Ca2+ in a PP1-rich environment (243). Rather, CaMKII might exhibit bistability in specific microenvironments, such as the 'core' PSD where it binds to the NMDA receptor (Dosemeci et al., 2016; Petersen et al., 2003). Whereas in the spine cytosol, CaMKII has been demonstrated to act not as a bistable switch but as a leaky integrator of calcium activity (Chang et al., 2017).

### How have others modelled calcium binding to cam?
- Pharris et al., 2020: cam is set into the model as either unbound to calcium, or fully saturated, cam bound to 4 calcium (I cannot find how they model this transition).

_CaM and PP are modeled in MCell as conventional cytosolic molecules. CaM is modeled as 132 having one of two states: un-bound apo-CaM and fully-saturated Ca2+/CaM (four Ca2+ bound to CaM). 133 Although we and others have described the importance of sub-saturated Ca2+/CaM states with fewer than 134 4 Ca2+ [12, 24, 31, 44-46], the dynamics of Ca2+-CaM binding and the binding of sub-saturated Ca2+/CaM 135 to CaMKII are beyond the scope of this current work._

- Stefan at al., 2008: ca binds with same affinity regardless of 1, 2 or 4 binding, and affinity is modelled according to dissociation rate:
_The kon for calcium binding was assumed to be the same for all four binding sites and both states, because it can be assumed to be controlled only by calcium and calmodulin diffusion and size (random exploration). Different affinities were represented by different koff values._

### How have others modelled cam binding to camkii?

### How have others modelled camkii P?

### How have others modelled camkii/nmdar interactions, if at all?

Okay so im gonna make a summary of all of the questions above, from the top of my head. There are multiple models by Stefan et al., on CaMKII and CaM binding [REFERENCES], which look at the dynamics of these two molecules using [insert software]. These models are mathematical and provide insights into the dynamics of how calcium is binding to calmodulin and how this further binds to camkii and affects the kinase opening and closing as well as phosphorylation. These models are from the first decades of the 2000s. 
This is not itended to be an in depth review of the models out there but rather a summary to compare how relevant previous models compare to the model I have created here. Okay anyway so next there is a model by Pharris et al., where they model camkii as a dodecamer in 3d space but their camkii dodecamer does not diffuse in space. 
pharris et al focus on how Ca2+/CaM-binding may both stabilize CaMKII subunit activation and regulate maintenance of CaMKII autophosphorylation. 

ordyan et al., also model camkii as a dodecamer and its diffusion in time and space using mcell (so does pharris), they focus on the dynamics between calmodulin and scaffolding molecule neurogranin on camkii, their model is useful for models predict that the parameters of this leaky integrator are finely tuned through the interactions of Ng, CaM, CaMKII, and PP1, providing a mechanism to precisely control the sensitivity of synapses to calcium signals, but they do not look at the important interaction nmdars. then there is a very recent paper published by bartol et al., who use the same version of mcell4 we are using, they provide a spatial temporal model of camkii as a dodecamer with calcium flowing through nmdar receptors but they do not look at nmdar interactions directly with camkii. each model is a little bit of a build up to the model we have created where camkii is modelled as a dodecamer that directly interacts with nmdars on te surface of the postsynaptic dendrite. 
---
This is not intended to be an in-depth review of the existing models, but rather a summary aimed at comparing how previous models relate to the model I have developed. Several multi-state models of CaMKII have been proposed, each differing in focus and scope from the present one. Notably, there are multiple models by Stefan et al. on CaMKII  which explore the dynamics between these two molecules using Stochsim which does not does not account for spatial effects, unlike MCell. These mathematical models provide insights into the mechanisms of calcium binding to calmodulin and the subsequent interaction with CaMKII, influencing the kinase’s activation, phosphorylation, and opening and closing dynamics. These models, primarily from the early 2000s, include a multi-state model by Stefan et al. (2012) [29], implemented in the particle-based stochastic simulator StochSim [70].

Pharris et al. propose a model in which CaMKII is represented as a dodecamer in 3D space; however, their CaMKII dodecamer does not diffuse spatially. Their work primarily investigates how Ca²⁺/CaM binding may stabilize the activation of CaMKII subunits and regulate the maintenance of CaMKII autophosphorylation. Similarly, Ordyan et al. also model CaMKII as a dodecamer and its diffusion over time and space using MCell (as does Pharris et al.). Their model focuses on the interactions between calmodulin and the scaffolding molecule neurogranin on CaMKII. It is valuable in showing how the finely tuned interactions between neurogranin, CaM, CaMKII, and PP1 provide a mechanism for precisely controlling synaptic sensitivity to calcium signals. However, they do not consider the important interaction with NMDA receptors (NMDARs).

A more recent study by Bartol et al. also employs the same version of MCell4 as in this study, presenting a spatiotemporal model of CaMKII as a dodecamer, with calcium flowing through NMDARs. However, they do not directly explore the interaction between NMDARs and CaMKII. Each of these models serves as a step towards the current model, where CaMKII is modelled as a dodecamer that directly interacts with NMDARs located on the surface of the postsynaptic dendrite.


## Bartol et al., 2024
Bartol et al. 2024 use particle-based stochastic simulations in MCell4 to model the activation of CaMKII by Ca2+ flowing through NMDARs within a postsynaptic spine. They translate the kinetic properties of CaMKII regulation previously measured _in vitro_ into the context of a computational model of a postsynaptic spine.

Using MCell4 simulations, the paper shows that CaMKII autophosphorylation, influenced by 'Ca2+-calmodulin-trapping' and PP1 dephosphorylation mechanisms, does not behave as a bistable switch, but instead they propose a "kinetic proofreading" mechanism of CaMKII, crucial for synaptic plasticity induction.

They test CaM trapping hypothesis that it leads to an increase in CaMKII autoP during high frequency synaptic stimulation. They _test this hypothesis by investigating the impact of CaM-trapping on the dynamics of activation of CaMKII in a stochastic reaction-diffusion model instantiated in a realistic spine geometry_. _We also investigate how CaM-trapping may regulate dephosphorylation of CaMKII by protein phosphatase-1 (PP1), and thus influence the kinetics of autophosphorylation of CaMKII and the response of CaMKII to different stimulation frequencies._

EXTRA THAT IM LEAVING BECAUSE IM TOO SAD TO DELETE due to sunk cost fallacy BUT PROBABLY SHOULD delete:
(This manuscript reports the fundamental finding that an oligomeric protein kinase, CaMKII, can be phosphorylated by another molecule of the holoenzyme in a manner that does not involve subunit exchange. the summary by editor and abstract say different things. the abstract says inter subunit exchange, the summary says intra subunit exxchange which one is it.  https://elifesciences.org/articles/86090 )

Is the info below wrong, then? 
Modelling studies (Lisman, 1985; Miller et al., 2005) have suggested that intersubunit autophosphorylation can maintain the phosphorylated state of the kinase once it is located in the PSD; each subunit is catalytic and, if itself phosphorylated at T286, can phosphorylate T286 on a nearby subunit that might become dephosphorylated.
(this reaction requires that the substrate subunit has calmodulin bound as a result of basal Ca2+ levels (Hanson et al., 1994)). 
Recent reconstitution experiments directly demonstrate this mechanism (Urakubo et al., 2014).
_It has been reported that the binding affinity of CaMKIIα for Ca2+/CaM increases by Thr286 phosphorylation [7]._ https://www.nature.com/articles/s41467-019-10694-z

(Rostas and Skelding, 2023)_Initial enzyme activity of purified CaMKII requires the binding of both calcium and calmodulin. Following this, autophosphorylation of Thr286 in CaMKIIα occurs quickly and produces the following outcomes:_

- A 1000-fold increase in the affinity for CaM_Ca4
So when CaMKII_P binding of CaM_Ca4 is 1000 times more likely to bind (and stay bound) to CaMKII_P. 

This should mean that CaM_Ca4 dissociation rate from CaMKII_P should be quite slow.

the active cam bound kinetics of camkii will be different to the active cam unbound kinetics. so i think this should be specified in the model. 

right now after conversations with melanie we decided to just add active~1 no matter whether its bound to cam nmdar or just open, but the reactions kinetics will vary depending on whether camkii is active~1 because of flickering, cam bound or nmdar bound. I think? need to look into literature and maybe this can be a hypothesis to test. 

would camkii activity make a difference if camkii active~1 varies due to being bound to nmdars or cam?

but how do i make it into a hypothesis without biting my own tail? as in, i add x or y kinetics, of course its gonna give x or y results respectively. there are also emergent properties. 

Pharris et al., do a detransition of different steps for dephosphorylation. In this model we have the requirement that cam be not bound to a camkii subunit but otherwise PP1 can act and dephosorylate directly (we don't have a step for binding of pp1, then dephosphorylation
)

# Sensitivity Analysis

what is the story i wanna tell here.

what is the purpose of sensitivity analysys, what are they good for, briefly what kinds there are.
how are they specifivcally useful for parameter sensitivity analysis in complex chemical reactions like they ones we use.
what kind of analysis we use and why
how does it work?
step by step explanation
show results of sensitivity analysis for camkii model. 
...


As discussed in @sec-intro-comp, advanced mathematical models can serve as predictive tools to deepen our understanding of the mechanisms underlying observed biochemical processes. However, parameters such as rate constants, activation energies, thermodynamic constants, transport coefficients, etcetera, are rarely known with precision [REFEReNCE]. Consequently, predictions are typically subject to uncertainty. That is why understanding how parameter variations influence outcomes is a crucial part of model development and validation.

As part of model development and validation, sensitivity analysis (SA) can be employed to determine which parameters the model is more or less responsive to. This technique focuses on quantifying the impact of parameter changes on model predictions. SA aims to determine the influence of each input parameter, on the the model's output behaviour. In other words, SA is useful to assess how variations in input parameters, such as reaction propensities, rate constants, or initial concentrations, influence the system's outputs, which might include reaction trajectories, species concentrations over time, or the likelihood of certain reaction outcomes. 

By quantifying the responsiveness of the model's outputs to variations in these parameters, SA enables researchers to prioritise the most impactful parameters for precise measurement or further investigation. This is especially valuable when studying chemical kinetics, where many parameters are difficult to measure directly and often carry inherent uncertainties [REFERENCE]. SA not only aids in parameter estimation but also enhances model robustness and guides experimental design by highlighting which aspects of the reaction system are most sensitive to changes, thereby improving the predictive accuracy of kinetic models such as the ones used in this PhD.

Numerous classifications of SA techniques are presented in the literature [REFERENCES], each tailored to specific applications. SA can be applied to uncertainty analysis, parametric scaling, parameter estimation, experimental design, stability analysis, and the investigation and reduction of complex reaction mechanisms, among others [REFERENCES]. 

SA techniques can be can be broadly classified based on two key aspects: the analysis _scope_ and its _framework_. The scope of SA refers to whether the analysis focuses on small, local variations in input parameters or examines the global effect across a wider range of parameter values. Local sensitivity analysis typically investigates the effect of small perturbations in a single input parameter while holding others constant, often focusing on the immediate response of the model around a specific operating point. In contrast, global sensitivity analysis explores how changes in all relevant input parameters, over their entire range of possible values, influence the model's output, accounting for interactions between parameters and providing a more comprehensive view of model behaviour.

The framework refers to the approach used to model uncertainty (see @sec-odessa) in the system under study, and the method for sensitivity analysis will depend on whether the system is deterministic or probabilistic. In a deterministic sensitivity analysis framework, the relationship between inputs and outputs is precise and fixed, with no inherent randomness. Whereas a probabilistic (or stochastic) framework accounts for uncertainty by incorporating variability and randomness into the model, recognising that parameters may change within defined ranges or follow probability distributions. 

The framework refers to the approach used to model uncertainty in the system under study. The method for SA will vary dewpending on whether the system studied is deterministic or probabilistic. this gets complicated when models relations and behavrious are not linear and fixed, but probabilistic.  In a deterministic sensitivity analysis framework, the relationship between inputs and outputs is fixed and precise, with no inherent randomness (see @sec-odessa). On the other hand, a probabilistic (or stochastic) frameworks incorporate uncertainty into the model, where parameters are subject to variability and randomness. 

this gets complicated when models relations and behavrious are not linear and fixed, but probabilistic. 

Combining the single parameter sensitivity analysis and the robustness analysis to multiple parameter perturbation enables identifying critical reactions. Robustness analysis Exploring general features that do not depend on the exact values of kinetic parameters. https://slideplayer.com/slide/4128635/ 

https://gsa-module.readthedocs.io/en/develop/implementation/gsa.html#id1

https://www.sciencedirect.com/science/article/pii/S0951832005002437 

https://onlinelibrary.wiley.com/doi/full/10.1111/0272-4332.00039?casa_token=kSMZ8az_d9oAAAAA%3ADJHlyubFxmCaaW3H5rz0VT3Gu929Eo9dIzWqkFGaYfsqmHnYQgT235CNJBMI8Mg_v2HcVFWl9qOejRmn

file:///C:/Users/susan/Downloads/ssrn-3977108.pdf

Applications of sensitivity analysis to
uncertainty analysis, parametric scaling, parameter estimation, experimental design,
stability analysis, repro-modeling, and investigation and reduction of complex reaction
mechanisms are discussed profoundly. 
Usually, several sensitivity tools can be used to solve the same problem and
the selection of the appropriate method is based on a trade-off between accuracy and
computer time demand. 
The process of extrapolation of a modeling result to new parametric conditions
is called _parametric scaling._



Furthermore, regardless of uncertainty questions, there is always the overriding matter of which parameters control laboratory observations. Quantification of the role of the parameters in the model predictions is the traditional realm of sensitivity analysis. 

Sensitivity analysis investigates the effect of parameter change on the solution of
mathematical models. In chemical kinetics, models are usually based on differential
equations and the results are concentration-time curves, reaction rates, and various kinetic
features of the reaction.

There are several reviews on the various subfields of sensitivity
analysis: Tilden et al. overviewed the local and global methods [9], Cukier et al.
summarized the FAST method [10], and other non-comprehensive reviews can also be
found in the literature [11-17]. 

Other methods, described in
section 3, are suitable for the calculation of the sensitivity of special systems which
occur when the kinetic model has space- and time-dependent parameters or when the
kinetics is described by a stochastic or by a network model, or when experimental data
are processed. file:///C:/Users/susan/Downloads/BF01166355.pdf 

y are described in detail in section 6.
In this review, sensitivity analysis will be discussed from the point of view of
reaction kinetics.


Complex mathematical models are increasingly being used as predictive tools and as aids for understanding the processes underlying observed chemical phenomena. The parameters appearing in these models, which may include rate constants, activation energies, thermodynamic constants, transport coefficients, initial conditions, and operating conditions, are seldom known to high precision. 

...

_Correlated inputs: Most common sensitivity analysis methods assume independence between model inputs, but sometimes inputs can be strongly correlated. Correlations between inputs must then be taken into account in the analysis_

### Sensitivity and Uncertainty Analysis

**Sensitivity analysis** is a valuable tool for identifying the key parameters that most significantly influence the final results of a model. By focusing on the rate constants or interactions that have the greatest impact, you can reduce the complexity of the system. This allows you to optimize or vary only a subset of parameters, improving both the efficiency and accuracy of your analysis.

**Uncertainty analysis**, on the other hand, explores how uncertainties in parameters—such as \( k_{\text{on}} \) and \( k_{\text{off}} \)—propagate through the system. This analysis helps determine how robust your model is to variations in these parameters, providing insight into the model’s reliability and the range of potential outcomes under different conditions.

the sensitivity analysis result will change even if kon remains the same but we change koff for example...how do i keep track of these changes in a modular manner?

should I be doing a Variance-based sensitivity analysis? 

In molecular dynamics or reaction kinetics, the interplay between 
$k_{\text{on}}$ (the association rate constant) and $k_{\text{off}}$ (the dissociation rate constant) determines the equilibrium constant ($K_d$ or $K_a$), as well as the dynamics of binding and unbinding events.

If $k_{\text{on}}$ remains constant but $k_{\text{off}}$ changes, the overall equilibrium constant $K_d = \frac{k_{\text{off}}}{k_{\text{on}}}$ or $K_a = \frac{k_{\text{on}}}{k_{\text{off}}}$ will change. This directly affects the system's steady-state or equilibrium conditions and, therefore, the behavior or "value" associated with $k_{\text{on}}$.

I could test for Time to Equilibrium: Analyze how long it takes the system to reach a steady state for various 𝑘off values. 

- The **equilibrium condition** is defined by:

  $$
  K_d = \frac{k_{\text{off}}}{k_{\text{on}}}.
  $$

  At equilibrium, the fraction of bound molecules ($\theta\$) depends on ($K_d$) and the total concentration of ligands ([L]):

  $$
  \theta = \frac{[L]}{[L] + K_d}.
  $$

- For **kinetics**, the rate equations govern how quickly the system approaches equilibrium:

  $$
  \frac{d[AB]}{dt} = k_{\text{on}} [A][B] - k_{\text{off}} [AB],
  $$

  where \([AB]\) is the concentration of the bound complex.

How the sensitivity analysis is done (maybe good to have a README file for where the code is too, i think)

prepare run model, sweep params, store them and analyze them. 